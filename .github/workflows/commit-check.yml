name: Check lint and Run Tests in PR

on:
  push:
    branches: [ feature/* ]

jobs:
  check-lint:
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up Node.js 18.20.3
        uses: actions/setup-node@v3
        with:
          node-version: 18.20.3

      - name: Cache dependencies
        uses: actions/cache@v3
        id: node_modules
        with:
          path: |
            **/node_modules
          key: ${{ runner.os }}-node_modules-${{ hashFiles('**/package-lock.json') }}

      - name: Install dependencies
        run: |
          npm i

      - name: Check linting
        run: npm run lint
        continue-on-error: false

  install:
    runs-on: ubuntu-22.04
    needs: check-lint
    container:
      image: cypress/browsers:node-18.20.3-chrome-125.0.6422.141-1-ff-126.0.1-edge-125.0.2535.85-1
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Cypress install
        uses: cypress-io/github-action@v5
        with:
          runTests: false
          build: npm run build

      - name: Save dist folder
        uses: actions/upload-artifact@v4
        with:
          name: dist
          if-no-files-found: error
          path: dist
  
  component-test:
    runs-on: ubuntu-22.04 
    container: cypress/browsers:node-18.20.3-chrome-125.0.6422.141-1-ff-126.0.1-edge-125.0.2535.85-1
    strategy:
      fail-fast: false
      matrix:
        # run 3 copies of the current job in parallel
        containers: [1, 2, 3]
    needs: install
    steps:
      - name: Checkout ui
        uses: actions/checkout@v4

      - name: Download the dist folders
        uses: actions/download-artifact@v4
        with:
          name: dist
          path: dist

      - name: Cypress run component tests
        uses: cypress-io/github-action@v6
        with:
          component: true
          start: npm start
          browser: chrome
          record: true
          parallel: true
          group: "Chrome component"
        env: 
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
          CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_RECORD_KEY }}
          CYPRESS_PROJECT_ID: ${{ secrets.CYPRESS_PROJECT_ID }}

  # this is needed to wait for the new docker image to be build and published to the registry
  # so that we can use the image to run ui of the needed commit related version as part of local-env
  # the idea is taken from here https://stackoverflow.com/a/71489231
  push_to_registry:
    uses: ./.github/workflows/docker-build-and-push.yml
    # without this it cannot login to the registry
    secrets: inherit

  e2e-test:
    runs-on: ubuntu-22.04
    needs: 
      - install
      - push_to_registry
    steps:
      - name: Checkout inner-circle-layout-ui
        uses: actions/checkout@v4
        with:
          repository: TourmalineCore/inner-circle-layout-ui
          ref: feature/add-module-federation

      - name: Get latest commit SHA of inner-circle-layout-ui
        run: echo "ICL_UI_SHA=$(git rev-parse HEAD)" >> $GITHUB_ENV
      
      - name: Checkout local-env
        uses: actions/checkout@v4
        with:
          repository: TourmalineCore/inner-circle-local-env

      - name: Deploy Local Env to Kind k8s
        uses: devcontainers/ci@v0.3
        with:
          runCmd: |
            # we need to override "latest" image tag of ui inside local-env to run e2e against the current commit ui version and not against latest from master
            yq -i '.image.tag = "sha-${{ github.sha }}"' deploy/values-compensations-ui.yaml.gotmpl
            yq -i '.image.tag = "sha-${{ env.ICL_UI_SHA }}"' deploy/values-inner-circle-layout-ui.yaml.gotmpl

            kind create cluster --name inner-circle --config kind-local-config.yaml --kubeconfig ./.inner-circle-cluster-kubeconfig
            # we need to properly expose KUBECONFIG as an absolute path, pwd prints current working directory path
            export KUBECONFIG=$(pwd)/.inner-circle-cluster-kubeconfig

            helmfile --environment local --namespace local -f deploy/helmfile.yaml apply
          push: never
          # this variable is used by local-env helmfile to use current feature branch helm chart values.yaml file
          # this is needed for a case when as part of the feature the chart was changed and is different from master branch
          # this should properly fill the feature branch name in spite of the pipeline trigger source (PR, commit, etc.)
          # https://stackoverflow.com/a/71158878
          env: |
            INNER_CIRCLE_COMPENSATION_UI_BRANCH=${{ github.head_ref || github.ref_name }}

      - name: Checkout ui
        uses: actions/checkout@v4

      - name: Cypress run e2e tests
        uses: cypress-io/github-action@v6
        with:
          wait-on: "http://localhost:40100" 
          browser: chrome
          config-file: cypress.config.local-env.ts
        env:
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
          CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_RECORD_KEY }}
          CYPRESS_PROJECT_ID: ${{ secrets.CYPRESS_PROJECT_ID }}
      
      - name: Upload videos of tests failed 
        uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: cypress-videos
          path: |
            cypress/videos/*.mp4
            cypress/screenshots/**/*.png
